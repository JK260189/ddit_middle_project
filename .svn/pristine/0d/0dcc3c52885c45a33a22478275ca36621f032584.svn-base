package kr.or.ddit.product.service;

import java.util.List;

import kr.or.ddit.product.dao.ProductDaoImpl;
import kr.or.ddit.product.vo.BusVO;
import kr.or.ddit.product.vo.CityVO;
import kr.or.ddit.product.vo.DetailVO;
import kr.or.ddit.product.vo.DoProductVO;
import kr.or.ddit.product.vo.FlightVO;
import kr.or.ddit.product.vo.FoProductVO;
import kr.or.ddit.product.vo.HotelVO;

public class ProductServiceImpl implements IProductService{
	
	private ProductDaoImpl dao;
	
	private static ProductServiceImpl service;
	private ProductServiceImpl() {
		dao = ProductDaoImpl.getInstance();
	}
	public static ProductServiceImpl getInstance() {
		if (service == null) service = new ProductServiceImpl();
		return service;
	}
	@Override
	public List<FoProductVO> getAllFoProduct() {
		
		return dao.getAllFoProduct();
		
	}
	@Override
	public int insertFoProduct(FoProductVO fVo) {
		
		return dao.insertFoProduct(fVo);
	}
	@Override
	public int updateFoProduct(FoProductVO fVo) {
		
		return dao.updateFoProduct(fVo);
	}
	@Override
	public int deleteFoProduct(String fo_code) {
		
		return dao.deleteFoProduct(fo_code);
	}
	@Override
	public List<DetailVO> getDetailProdFo(String fo_code) {
		
		return dao.getDetailProdFo(fo_code);
	}
	@Override
	public DetailVO getSearchedProdFo(String do_name) {
		
		return dao.getSearchedProdFo(do_name);
	}
	@Override
	public List<DoProductVO> getAllDoProduct() {
		
		return dao.getAllDoProduct();
	}
	@Override
	public int insertDoProduct(DoProductVO dVo) {
		
		return dao.insertDoProduct(dVo);
	}
	@Override
	public int updateDoProduct(DoProductVO dVo) {
		
		return dao.updateDoProduct(dVo);
	}
	@Override
	public int deleteDoProduct(String do_code) {
		
		return dao.deleteDoProduct(do_code);
	}
	@Override
	public List<DetailVO> getDetailProdDo(String do_code) {
		
		return dao.getDetailProdDo(do_code);
	}
	@Override
	public DetailVO getSearchedProdDo(String do_name) {
		
		return dao.getSearchedProdDo(do_name);
	}
	@Override
	public int updateHotel(HotelVO hVo) {
		
		return dao.updateHotel(hVo);
	}
	@Override
	public int updateFlight(FlightVO flightVO) {
		
		return dao.updateFlight(flightVO);
	}
	@Override
	public int updateCity(CityVO cVo) {
		
		return dao.updateCity(cVo);
	}
	@Override
	public int updateBus(BusVO bVo) {
		
		return dao.updateBus(bVo);
	}
	
	

}
